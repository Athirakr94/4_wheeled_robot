<?xml version="1.0" ?>
<robot name="robot1">
    <!-- Import Rviz colors -->
    <material name="Black">
        <color rgba="0.0 0.0 0.0 1.0"/>
    </material>
    <material name="Blue">
        <color rgba="0.0 0.0 0.8 1.0"/>
    </material>
    <material name="Green">
        <color rgba="0.0 0.8 0.0 1.0"/>
    </material>
    <material name="Grey">
        <color rgba="0.4 0.4 0.4 1.0"/>
    </material>
    <material name="DarkGrey">
        <color rgba="0.3 0.3 0.3 1.0"/>
    </material>
    <material name="Orange">
        <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
    </material>
    <material name="Brown">
        <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
    </material>
    <material name="Red">
        <color rgba="0.8 0.0 0.0 1.0"/>
    </material>
    <material name="White">
        <color rgba="1.0 1.0 1.0 1.0"/>
    </material>

<!--
    ###################################################################################################################
    Not that all mass/inertial values are examples values only. They are not representative of the actual components.
    ###################################################################################################################

-->
    <link name="world"/>
    <joint name="world_base_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <parent link="world"/>
        <child link="base"/>
    </joint>

    <link name="base">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<box size="0.3 0.2 0.2"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_Base.dae"/-->
            </geometry>
            <material name="DarkGrey"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<box size="0.3 0.2 0.2"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_Base.dae"/-->
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="1.5"/>
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
        </inertial>
    </link>
    <joint name="base_basecomponent_joint" type="fixed">
        <parent link="base"/>
        <child link="camera_link"/>
        <origin rpy="0 0 0" xyz="0 0 0.1"/>
    </joint>
    <link name="camera_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<box size="0.05 0.05 0.05"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_BaseComponents.stl"/-->
            </geometry>
            <material name="DarkGrey"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<box size="0.2 0.2 0.2"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_BaseComponents.stl"/-->
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="0.2"/>
            <inertia ixx="0.002" ixy="0" ixz="0" iyy="0.002" iyz="0" izz="0.002"/>
        </inertial>
    </link>
    <!--joint name="basecomponent_kinect_joint" type="revolute">
        <parent link="basecomponent"/>
        <child link="kinect"/>
        <origin rpy="0 0 0" xyz="0.014 0 0.248"/>
        <axis xyz="0 1 0"/>
        <limit lower="0" upper="0" effort="300" velocity="0"/>
    </joint>
    <link name="kinect">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://qbot2e/meshes/QBot2e_Kinect.stl"/>
            </geometry>
            <material name="Grey"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://qbot2e/meshes/QBot2e_Kinect.stl"/>
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="0.1"/>
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
        </inertial>
    </link-->
    <joint name="base_wheell_joint" type="continuous">
        <parent link="base"/>
        <child link="wheel_left_hind"/>
        <origin rpy="1.57  0 0" xyz="-0.1003 0.11 -0.1"/>
        <axis xyz="0 0 -1"/>
    </joint>
    <link name="wheel_left_hind">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<cylinder length="0.02" radius="0.05"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_Wheel.stl"/-->
            </geometry>
            <material name="Black"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<cylinder length="0.02" radius="0.05"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_Wheel.stl"/-->
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="0.5"/>
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
            <!--inertia ixx="0.138973038944984" 
          ixy="0.00240438901312515" 
          ixz="0.0320681563279578" 
          iyy="0.160053837434921" 
          iyz="-0.0109556260035955" 
          izz="0.028546837728721"/-->
        </inertial>
    </link>
    <joint name="base_wheelr_joint" type="continuous">
        <parent link="base"/>
        <child link="wheel_right_hind"/>
        <origin rpy="1.57 0 0" xyz="-0.1003 -0.11 -0.1"/>
        <axis xyz="0 0 -1"/>
    </joint>
    <link name="wheel_right_hind">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<cylinder length="0.02" radius="0.05"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_Wheel.stl"/-->
            </geometry>
            <material name="Black"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<cylinder length="0.02" radius="0.05"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_Wheel.stl"/-->
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="0.5"/>
            <!--inertia ixx="0.138973038944984" 
          ixy="0.00240438901312515" 
          ixz="0.0320681563279578" 
          iyy="0.160053837434921" 
          iyz="-0.0109556260035955" 
          izz="0.028546837728721"/>
          </inertial-->
           <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
        </inertial>
        
    </link>
    <joint name="base_wheellh_joint" type="continuous">
        <parent link="base"/>
        <child link="wheel_left"/>
        <origin rpy="1.57  0 0" xyz="0.1003 0.11 -0.1"/>
        <axis xyz="0 0 -1"/>
    </joint>
    <link name="wheel_left">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<cylinder length="0.02" radius="0.05"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_Wheel.stl"/-->
            </geometry>
            <material name="Black"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<cylinder length="0.02" radius="0.05"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_Wheel.stl"/-->
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="0.5"/>
            <!--inertia ixx="0.00107634033140466"
            ixy="1.51573650824965E-05"
            ixz="-6.94838293881106E-05"
            iyy="0.000914613440717638"
            iyz="0.000195407309247701"
            izz="0.000234021785961031" />
        </inertial-->
        <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
      </inertial>
    </link>
    <joint name="base_wheelrh_joint" type="continuous">
        <parent link="base"/>
        <child link="wheel_right"/>
        <origin rpy="1.57 0 0" xyz="0.1003 -0.11 -0.1"/>
        <axis xyz="0 0 -1"/>
    </joint>
    <link name="wheel_right">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<cylinder length="0.02" radius="0.05"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_Wheel.stl"/-->
            </geometry>
            <material name="Black"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
		<cylinder length="0.02" radius="0.05"/>
                <!--mesh filename="package://qbot2e/meshes/QBot2e_Wheel.stl"/-->
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <mass value="0.5"/>
	    <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
            <!--inertia ixx="0.00107634033140466"
            ixy="1.51573650824965E-05"
            ixz="-6.94838293881106E-05"
            iyy="0.000914613440717638"
            iyz="0.000195407309247701"
            izz="0.000234021785961031" /-->
        </inertial>
    </link>
    <link name="imu_link">
    <visual>
        <geometry>
        <box size="0.1 0.1 0.1"/>
        </geometry>
    </visual>

    <collision>
        <geometry>
        <box size="0.1 0.1 0.1"/>
        </geometry>
    </collision>
    <inertial>
                <origin rpy="0 0 0" xyz="0 0 0.05"/>
                <mass value="0.001"/>
                <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
    <!--xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1"/-->
    </link>

    <joint name="imu_joint" type="fixed">
    <parent link="base"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0.01"/>
    </joint>

    <gazebo reference="imu_link">
        <gravity>true</gravity>
        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>imu</topicName>
                <bodyName>imu_link</bodyName>
                <updateRateHZ>10.0</updateRateHZ>
                <gaussianNoise>0.0</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu_link</frameName>
                <initialOrientationAsReference>false</initialOrientationAsReference>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
        </sensor>
    </gazebo>
    <gazebo>
        <plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive">
            <!--robotNamespace></robotNamespace-->
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
            <legacyModeNS>false</legacyModeNS>
            <alwaysOn>true</alwaysOn>
            <updateRate>60</updateRate>
            <leftJoint>base_wheell_joint</leftJoint>
            <rightJoint>base_wheelr_joint</rightJoint>
            <wheelSeparation>0.2</wheelSeparation>
            <wheelDiameter>0.1</wheelDiameter>
            <torque>0.01</torque>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <robotBaseFrame>base</robotBaseFrame>
            <publishWheelTF>true</publishWheelTF>
            <publishWheelJointState>false</publishWheelJointState>
            <rosDebugLevel>na</rosDebugLevel>
            <wheelAcceleration>0.01</wheelAcceleration>
            <wheelTorque>0.01</wheelTorque>
            <odometrySource>base</odometrySource>
            <publishOdomTF>true</publishOdomTF>
            <publishTf>true</publishTf>
        </plugin>
    </gazebo>

    <gazebo reference="camera_link">
        <sensor type="camera" name="camera1">
            <update_rate>30.0</update_rate>
            <camera name="head">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
                <width>800</width>
                <height>800</height>
                <format>R8G8B8</format>
            </image>
            <clip>
                <near>0.02</near>
                <far>300</far>
            </clip>
            <noise>
                <type>gaussian</type>

                <mean>0.0</mean>
                <stddev>0.007</stddev>
            </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>robot1/camera1</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="base">
        <material>Gazebo/Orange</material>

    </gazebo>
    <gazebo reference="basecomponent">
        <material>Gazebo/DarkGrey</material>
    </gazebo>
    <gazebo reference="camera">
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="wheel_left">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="wheel_right">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="wheel_left_hind">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="wheel_right_hind">
        <material>Gazebo/Black</material>
    </gazebo>
    <transmission name="wheelr_tran">
        <robotNamespace>/robot1</robotNamespace>
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="base_wheelr_joint">
            <hardwareInterface>PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="wheelr_motor">
            <hardwareInterface>PositionJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="wheell_tran">
        <robotNamespace>/robot1</robotNamespace>
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="base_wheell_joint">
            <hardwareInterface>PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="wheell_motor">
            <hardwareInterface>PositionJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
<transmission name="wheelrh_tran">
        <robotNamespace>/robot1</robotNamespace>
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="base_wheelrh_joint">
            <hardwareInterface>PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="wheelrh_motor">
            <hardwareInterface>PositionJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="wheellh_tran">
        <robotNamespace>/robot1</robotNamespace>
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="base_wheellh_joint">
            <hardwareInterface>PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="wheellh_motor">
            <hardwareInterface>PositionJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
</robot>
